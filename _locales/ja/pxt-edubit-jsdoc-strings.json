{
  "edubit.i2cRead": "I2C方式でPIC16F1937のレジスタ値を読み取ります。",
  "edubit.i2cRead|param|register": "レジスタアドレス。",
  "edubit.i2cWrite": "I2C方式でPIC16F1937のレジスタに書き込みます。",
  "edubit.i2cWrite|param|data": "書き込むデータ。",
  "edubit.i2cWrite|param|register": "レジスタアドレス。",
  "edubit.limit": "数値の範囲を制限します。",
  "edubit.limit|param|max": "最大値。",
  "edubit.limit|param|min": "最小値。",
  "edubit.limit|param|value": "制限対象の番号。",
  "edubitIrBit": "IRビット用のブロック。",
  "edubitIrBit.isIrSensorTriggered": "IRセンサーが感知したとき、真を返します。",
  "edubitIrBit.onIrSensorEvent": "IRセンターが感知または感知しなくなったとき、指定されたプログラムを実行します。",
  "edubitIrBit.onIrSensorEvent|param|event": "イベント種別。",
  "edubitIrBit.onIrSensorEvent|param|handler": "イベントが発生したとき、実行するプログラム。",
  "edubitIrBit.readIrSensor": "IR センサーの状態を返します。（0または1）",
  "edubitMotors": "サーボとモーター用のブロック。",
  "edubitMotors.brakeMotor": "モーターの回転を停止します。",
  "edubitMotors.brakeMotor|param|motor": "モーターチャンネル。",
  "edubitMotors.disableServo": "サーボモーターを停止します。",
  "edubitMotors.disableServo|param|servo": "サーボチャンネル。",
  "edubitMotors.runMotor": "モーターを前方向または逆方向に回転させます。（回転速度：0～255）",
  "edubitMotors.runMotor|param|direction": "モーターの回転方向。",
  "edubitMotors.runMotor|param|motor": "モーターチャンネル。",
  "edubitMotors.runMotor|param|speed": "モーター速度。",
  "edubitMotors.setServoPosition": "サーボの角度を設定します。（0～180度）",
  "edubitMotors.setServoPosition|param|position": "サーボの角度。",
  "edubitMotors.setServoPosition|param|servo": "サーボチャンネル。",
  "edubitPotentioBit": "ポテンシオビット用のブロック。",
  "edubitPotentioBit.comparePot": "ポテンショメータ値としきい値を比較し、比較結果を返します。（真／偽）",
  "edubitPotentioBit.comparePot|param|compareType": "より大きい、または、より小さい。",
  "edubitPotentioBit.comparePot|param|threshold": "比較値。",
  "edubitPotentioBit.onEvent": "ポテンショメータ値がしきい値を超えたとき、指定されたプログラムを実行します。",
  "edubitPotentioBit.onEvent|param|compareType": "より大きい、または、より小さい。",
  "edubitPotentioBit.onEvent|param|handler": "イベントが発生したとき、実行するプログラム。",
  "edubitPotentioBit.onEvent|param|threshold": "比較値。",
  "edubitPotentioBit.readPotValue": "ポテンショメータ値を返します。（0～1023）",
  "edubitPower.isLowBatt": "バッテリーが低下しているとき、真を返します。",
  "edubitPower.isOvervoltage": "過電圧がかかっているとき、真を返します。",
  "edubitPower.isPowerOn": "電源がONの時、真を返します。",
  "edubitPower.readVin": "入力電圧を返します。",
  "edubitRgbBit": "RGBビット用のブロック。",
  "edubitRgbBit.clear": "RGBビットを全て消灯します。",
  "edubitRgbBit.colors": "既定色のRGB値を返します。",
  "edubitRgbBit.rgb": "赤緑色のチャンネルをRGBに変換します。",
  "edubitRgbBit.rgb|param|blue": "青色チャンネルの値（0～255） ",
  "edubitRgbBit.rgb|param|green": "緑色チャンネルの値（0～255） ",
  "edubitRgbBit.rgb|param|red": "赤色チャンネルの値（0～255） ",
  "edubitRgbBit.rotatePixels": "RGB BitのLEDを前方向または後方向に移動します。（後方向-3～前方向3）",
  "edubitRgbBit.rotatePixels|param|offset": "移動するLEDの間隔。",
  "edubitRgbBit.setBrightness": "RGB BitのLEDの明るさを設定します。（0～255）",
  "edubitRgbBit.setBrightness|param|brightness": "ピクセルの明るさ。",
  "edubitRgbBit.setPixelColor": "RGB BitのLEDそれぞれのピクセル値を設定します。",
  "edubitRgbBit.setPixelColor|param|color": "RGB BitのLEDのピクセル値。",
  "edubitRgbBit.setPixelColor|param|pixel": "色を変更するRGB Bit番号。",
  "edubitRgbBit.shiftPixels": "RGB Bitの色を前方向または後方向に消灯します。（-3～3）",
  "edubitRgbBit.shiftPixels|param|offset": "消灯するLEDの数。",
  "edubitRgbBit.showColor": "RGB Bitを全て同じ色で点灯します。",
  "edubitRgbBit.showColor|param|color": "RGB BitのLEDのピクセル値。",
  "edubitRgbBit.showRainbow": "RGBピクセルをレインボーパターンで点灯します。",
  "edubitSoundBit": "サウンドビット用のブロック。",
  "edubitSoundBit.compareSoundSensor": "音量（0～1023）をしきい値と比較し、結果を返します。（真／偽）",
  "edubitSoundBit.compareSoundSensor|param|compareType": "より大きい、または、より小さい。",
  "edubitSoundBit.compareSoundSensor|param|threshold": "比較値。",
  "edubitSoundBit.onEvent": "音量がしきい値を超えたとき、指定されたプログラムを実行します。",
  "edubitSoundBit.onEvent|param|compareType": "より大きい、または、より小さい。",
  "edubitSoundBit.onEvent|param|handler": "イベント発生時に実行するプログラム。",
  "edubitSoundBit.onEvent|param|threshold": "比較値。",
  "edubitSoundBit.readSoundSensor": "感知している音量を返します。（0～1023）",
  "edubitTrafficLightBit": "信号機ビット用のブロック。",
  "edubitTrafficLightBit.digitalStatePicker": "デジタル入出力の状態を取得します。",
  "edubitTrafficLightBit.digitalStatePicker|param|state": "デジタル入出力の状態。",
  "edubitTrafficLightBit.setLed": "LEDをオン／オフします。（オン=1、オフ=0）",
  "edubitTrafficLightBit.setLed|param|color": "LEDの色。",
  "edubitTrafficLightBit.setLed|param|state": "LEDの状態。",
  "edubitTrafficLightBit.toggleLed": "LEDを点滅させます。",
  "edubitTrafficLightBit.toggleLed|param|color": "LEDの色。"
}